syntax = "proto3";

package TW.Aeternity.Proto;
option java_package = "wallet.core.jni.proto";

// Transaction payload (transfer, smart contract call, ...)
message Payload {
    // Native coin transfer transaction
    message Transfer {
        // Amount to send in wei (256-bit number)
        bytes amount = 1;

        // Optional payload
        string payload = 2;
    }

    // Generic smart contract transaction
    message Generic {
        // Optional payload
        string payload = 1;
    }

    oneof payload_oneof {
        Transfer payload_transfer = 1;
        Generic payload_contract_generic = 4;
    }
}

// Input data necessary to create a signed transaction.
message SigningInput {
    // Address of the sender with "ak_" prefix
    string from_address = 1;

    // Address of the recipient with "ak_" prefix
    string to_address = 2;

    bytes fee = 3;

    // Time to live until block height
    uint64 ttl = 4;

    uint64 nonce = 5;

    bytes private_key = 6;

    Payload payload = 7;
}

// Transaction signing output.
message SigningOutput {
    // Signed and encoded transaction bytes, Base64 with checksum
    string encoded = 1;
    // Signature, Base58 with checksum
    string signature = 2;
}
